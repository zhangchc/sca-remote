<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.sca.mapper.TDdmWorkflowTemplateDetailApproveDraftMapper">
  <resultMap id="BaseResultMap" type="com.zhang.sca.model.po.TDdmWorkflowTemplateDetailApproveDraft">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="node_id" jdbcType="BIGINT" property="nodeId" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="belong_id" jdbcType="BIGINT" property="belongId" />
    <result column="belong_type" jdbcType="TINYINT" property="belongType" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, node_id, enterprise_id, belong_id, belong_type, create_user, create_time, update_user, 
    update_time, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_ddm_workflow_template_detail_approve_draft
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_ddm_workflow_template_detail_approve_draft
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.zhang.sca.model.po.TDdmWorkflowTemplateDetailApproveDraft">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ddm_workflow_template_detail_approve_draft (node_id, enterprise_id, belong_id, 
      belong_type, create_user, create_time, 
      update_user, update_time, is_deleted
      )
    values (#{nodeId,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{belongId,jdbcType=BIGINT}, 
      #{belongType,jdbcType=TINYINT}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhang.sca.model.po.TDdmWorkflowTemplateDetailApproveDraft">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ddm_workflow_template_detail_approve_draft
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="belongId != null">
        belong_id,
      </if>
      <if test="belongType != null">
        belong_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="belongId != null">
        #{belongId,jdbcType=BIGINT},
      </if>
      <if test="belongType != null">
        #{belongType,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhang.sca.model.po.TDdmWorkflowTemplateDetailApproveDraft">
    update t_ddm_workflow_template_detail_approve_draft
    <set>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="belongId != null">
        belong_id = #{belongId,jdbcType=BIGINT},
      </if>
      <if test="belongType != null">
        belong_type = #{belongType,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhang.sca.model.po.TDdmWorkflowTemplateDetailApproveDraft">
    update t_ddm_workflow_template_detail_approve_draft
    set node_id = #{nodeId,jdbcType=BIGINT},
      enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      belong_id = #{belongId,jdbcType=BIGINT},
      belong_type = #{belongType,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into t_ddm_workflow_template_detail_approve_draft
    (node_id, enterprise_id, belong_id, belong_type, create_user, create_time, update_user, 
      update_time, is_deleted)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.nodeId,jdbcType=BIGINT}, #{item.enterpriseId,jdbcType=BIGINT}, #{item.belongId,jdbcType=BIGINT}, 
        #{item.belongType,jdbcType=TINYINT}, #{item.createUser,jdbcType=BIGINT}, NOW(),
        #{item.updateUser,jdbcType=BIGINT}, NOW(), 0
        )
    </foreach>
  </insert>

  <update id="deleteByNodeId">
    update t_ddm_workflow_template_detail_approve_draft
    set update_user = #{updateUser,jdbcType=BIGINT},
    update_time = NOW(),
    is_deleted = 1
    where node_id = #{nodeId,jdbcType=BIGINT}
  </update>

  <select id="selectByNodeId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_ddm_workflow_template_detail_approve_draft
    where node_id = #{nodeId,jdbcType=BIGINT}
    and is_deleted = 0
  </select>
  <select id="selectByNodeIdAndEnterpriseId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_ddm_workflow_template_detail_approve_draft
    where node_id = #{nodeId,jdbcType=BIGINT}
    and  enterprise_id = #{enterpriseId,jdbcType=BIGINT}
    and is_deleted = 0
  </select>
  <update id="logicDeleteByCondition" parameterType="com.zhang.sca.model.po.TDdmWorkflowTemplateDetailApproveDraft">
    update t_ddm_workflow_template_detail_approve_draft
    set
    is_deleted = 1,
    update_user = #{updateUser,jdbcType=BIGINT},
    update_time = NOW()
    where
    node_id = #{nodeId,jdbcType=BIGINT}
    and belong_id = #{belongId,jdbcType=BIGINT}
    and belong_type = #{belongType,jdbcType=TINYINT}
  </update>
  <update id="logicDeleteByNodeIdAndEnterpriseId">
    update t_ddm_workflow_template_detail_approve_draft
    set update_user = #{updateUser,jdbcType=BIGINT},
    update_time = NOW(),
    is_deleted = 1
    where node_id = #{nodeId,jdbcType=BIGINT}
    and enterprise_id = #{enterpriseId,jdbcType=BIGINT}
  </update>
</mapper>